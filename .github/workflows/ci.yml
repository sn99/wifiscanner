name: CI
on: [push, pull_request]
jobs:
  pre-test:
    name: Check/Rustfmt/Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Check
        uses: actions-rs/cargo@v1
        with:
          command: check
      - name: Rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check
      # Workaround because clippy doesn't report any errors
      # if executed after cargo check
      # https://github.com/rust-lang/rust-clippy/issues/4612
      - name: Clean
        uses: actions-rs/cargo@v1
        with:
          command: clean
      - name: Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy

  test:
    name: Test
    needs: pre-test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        toolchain: [stable, beta, nightly]
    env:
      # Print the full traceback if a test fails
      RUST_BACKTRACE: 1
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          override: true
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test

  deploy:
    name: Deploy & Release
    needs: test
    if: startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      # - name: Build & Deploy to crates.io
      #  run: |
      #    cargo build --release
      #    cargo publish --token ${{ secrets.CRATES_TOKEN }}

      #- name: Create Github Release
      #  id: create_release
      #  uses: actions/create-release@v1
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # already provided by GH Actions
      #  with:
      #    tag_name: ${{ github.ref }}
      #    release_name: ${{ github.ref }}
      #    draft: false
      #    prerelease: false
